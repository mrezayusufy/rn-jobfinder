{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ErrorToast = void 0;\nvar react_views_1 = require(\"@bacons/react-views\");\nvar react_1 = __importStar(require(\"react\"));\nvar ErrorToastMessage_1 = require(\"./ErrorToastMessage\");\nvar LogBoxData = __importStar(require(\"../Data/LogBoxData\"));\nvar LogBoxStyle = __importStar(require(\"../UI/LogBoxStyle\"));\nfunction useSymbolicatedLog(log) {\n  (0, react_1.useEffect)(function () {\n    LogBoxData.symbolicateLogLazy(\"stack\", log);\n    LogBoxData.symbolicateLogLazy(\"component\", log);\n  }, [log]);\n}\nfunction ErrorToast(props) {\n  var totalLogCount = props.totalLogCount,\n    level = props.level,\n    log = props.log;\n  useSymbolicatedLog(log);\n  return react_1.default.createElement(react_views_1.View, {\n    style: toastStyles.container\n  }, react_1.default.createElement(react_views_1.Pressable, {\n    style: {\n      flex: 1\n    },\n    onPress: props.onPressOpen\n  }, function (_ref) {\n    var hovered = _ref.hovered,\n      pressed = _ref.pressed;\n    return react_1.default.createElement(react_views_1.View, {\n      style: [toastStyles.press, {\n        transitionDuration: \"150ms\",\n        backgroundColor: pressed ? \"#323232\" : hovered ? \"#111111\" : LogBoxStyle.getBackgroundColor()\n      }]\n    }, react_1.default.createElement(Count, {\n      count: totalLogCount,\n      level: level\n    }), react_1.default.createElement(ErrorToastMessage_1.ErrorToastMessage, {\n      message: log.message\n    }), react_1.default.createElement(Dismiss, {\n      onPress: props.onPressDismiss\n    }));\n  }));\n}\nexports.ErrorToast = ErrorToast;\nfunction Count(_ref2) {\n  var count = _ref2.count,\n    level = _ref2.level;\n  return react_1.default.createElement(react_views_1.View, {\n    style: [countStyles.inside, countStyles[level]]\n  }, react_1.default.createElement(react_views_1.Text, {\n    style: countStyles.text\n  }, count <= 1 ? \"!\" : count));\n}\nfunction Dismiss(_ref3) {\n  var onPress = _ref3.onPress;\n  return react_1.default.createElement(react_views_1.Pressable, {\n    style: {\n      marginLeft: 5\n    },\n    hitSlop: {\n      top: 12,\n      right: 10,\n      bottom: 12,\n      left: 10\n    },\n    onPress: onPress\n  }, function (_ref4) {\n    var hovered = _ref4.hovered,\n      pressed = _ref4.pressed;\n    return react_1.default.createElement(react_views_1.View, {\n      style: [dismissStyles.press, hovered && {\n        opacity: 0.8\n      }, pressed && {\n        opacity: 0.5\n      }]\n    }, react_1.default.createElement(react_views_1.Image, {\n      source: require(\"@expo/metro-runtime/assets/close.png\"),\n      style: dismissStyles.image\n    }));\n  });\n}\nvar countStyles = react_views_1.StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1)\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1)\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1)\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.8),\n    textShadowOffset: {\n      width: 0,\n      height: 0\n    },\n    textShadowRadius: 3\n  }\n});\nvar dismissStyles = react_views_1.StyleSheet.create({\n  press: {\n    backgroundColor: \"#323232\",\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    height: 8,\n    width: 8\n  }\n});\nvar toastStyles = react_views_1.StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: \"center\",\n    marginBottom: 4\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#323232\",\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12\n  }\n});","map":{"version":3,"mappings":"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","names":["useSymbolicatedLog","log","LogBoxData","symbolicateLogLazy","ErrorToast","props","totalLogCount","level","react_1","react_views_1","style","toastStyles","container","flex","onPress","onPressOpen","hovered","pressed","press","transitionDuration","backgroundColor","LogBoxStyle","getBackgroundColor","Count","count","ErrorToastMessage_1","message","Dismiss","onPressDismiss","exports","countStyles","inside","text","marginLeft","hitSlop","top","right","bottom","left","dismissStyles","opacity","source","require","image","create","warn","getWarningColor","error","getErrorColor","getLogColor","marginRight","minWidth","aspectRatio","paddingHorizontal","borderRadius","justifyContent","alignItems","color","getTextColor","fontSize","lineHeight","textAlign","fontWeight","textShadowColor","textShadowOffset","width","height","textShadowRadius","marginBottom","borderWidth","overflow","flexDirection","borderColor"],"sourceRoot":"","sources":["../../../src/error-overlay/toast/ErrorToast.tsx"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { Image, Pressable, StyleSheet, Text, View } from \"@bacons/react-views\";\nimport React, { useEffect } from \"react\";\n\nimport { ErrorToastMessage } from \"./ErrorToastMessage\";\nimport * as LogBoxData from \"../Data/LogBoxData\";\nimport { LogBoxLog } from \"../Data/LogBoxLog\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  log: LogBoxLog;\n  totalLogCount: number;\n  level: \"warn\" | \"error\";\n  onPressOpen: () => void;\n  onPressDismiss: () => void;\n};\n\nfunction useSymbolicatedLog(log: LogBoxLog) {\n  // Eagerly symbolicate so the stack is available when pressing to inspect.\n  useEffect(() => {\n    LogBoxData.symbolicateLogLazy(\"stack\", log);\n    LogBoxData.symbolicateLogLazy(\"component\", log);\n  }, [log]);\n}\n\nexport function ErrorToast(props: Props) {\n  const { totalLogCount, level, log } = props;\n\n  useSymbolicatedLog(log);\n\n  return (\n    <View style={toastStyles.container}>\n      <Pressable style={{ flex: 1 }} onPress={props.onPressOpen}>\n        {({ hovered, pressed }) => (\n          <View\n            style={[\n              toastStyles.press,\n              {\n                transitionDuration: \"150ms\",\n                backgroundColor: pressed\n                  ? \"#323232\"\n                  : hovered\n                  ? \"#111111\"\n                  : LogBoxStyle.getBackgroundColor(),\n              },\n            ]}\n          >\n            <Count count={totalLogCount} level={level} />\n            <ErrorToastMessage message={log.message} />\n            <Dismiss onPress={props.onPressDismiss} />\n          </View>\n        )}\n      </Pressable>\n    </View>\n  );\n}\n\nfunction Count({ count, level }: { count: number; level: Props[\"level\"] }) {\n  return (\n    <View style={[countStyles.inside, countStyles[level]]}>\n      <Text style={countStyles.text}>{count <= 1 ? \"!\" : count}</Text>\n    </View>\n  );\n}\n\nfunction Dismiss({ onPress }: { onPress: () => void }) {\n  return (\n    <Pressable\n      style={{\n        marginLeft: 5,\n      }}\n      hitSlop={{\n        top: 12,\n        right: 10,\n        bottom: 12,\n        left: 10,\n      }}\n      onPress={onPress}\n    >\n      {({ hovered, pressed }) => (\n        <View\n          style={[\n            dismissStyles.press,\n            hovered && { opacity: 0.8 },\n            pressed && { opacity: 0.5 },\n          ]}\n        >\n          <Image\n            source={require(\"@expo/metro-runtime/assets/close.png\")}\n            style={dismissStyles.image}\n          />\n        </View>\n      )}\n    </Pressable>\n  );\n}\n\nconst countStyles = StyleSheet.create({\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(1),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(1),\n  },\n  log: {\n    backgroundColor: LogBoxStyle.getLogColor(1),\n  },\n  inside: {\n    marginRight: 8,\n    minWidth: 22,\n    aspectRatio: 1,\n    paddingHorizontal: 4,\n    borderRadius: 11,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  text: {\n    color: LogBoxStyle.getTextColor(1),\n    fontSize: 14,\n    lineHeight: 18,\n    textAlign: \"center\",\n    fontWeight: \"600\",\n    textShadowColor: LogBoxStyle.getBackgroundColor(0.8),\n    textShadowOffset: { width: 0, height: 0 },\n    textShadowRadius: 3,\n  },\n});\n\nconst dismissStyles = StyleSheet.create({\n  press: {\n    backgroundColor: \"#323232\",\n    height: 20,\n    width: 20,\n    borderRadius: 25,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  image: {\n    height: 8,\n    width: 8,\n  },\n});\n\nconst toastStyles = StyleSheet.create({\n  container: {\n    height: 48,\n    justifyContent: \"center\",\n    marginBottom: 4,\n  },\n  press: {\n    borderWidth: 1,\n    borderRadius: 8,\n    overflow: \"hidden\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#323232\",\n    backgroundColor: LogBoxStyle.getBackgroundColor(),\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}