{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"href\", \"replace\", \"asChild\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { Text } from \"@bacons/react-views\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { resolveHref } from \"./href\";\nimport useLinkToPathProps from \"./useLinkToPathProps\";\nimport { useRouter } from \"./useRouter\";\nimport { useFocusEffect } from \"../useFocusEffect\";\nexport function Redirect(_ref) {\n  var href = _ref.href;\n  var router = useRouter();\n  useFocusEffect(function () {\n    router.replace(href);\n  });\n  return null;\n}\nexport var Link = React.forwardRef(ExpoRouterLink);\nLink.resolveHref = resolveHref;\nfunction ExpoRouterLink(_ref2, ref) {\n  var href = _ref2.href,\n    replace = _ref2.replace,\n    asChild = _ref2.asChild,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  var resolvedHref = React.useMemo(function () {\n    if (href == null) {\n      throw new Error(\"Link: href is required\");\n    }\n    return resolveHref(href);\n  }, [href]);\n  var props = useLinkToPathProps({\n    href: resolvedHref,\n    replace: replace\n  });\n  var onPress = function onPress(e) {\n    if (\"onPress\" in rest) {\n      rest.onPress == null ? void 0 : rest.onPress(e);\n    }\n    props.onPress(e);\n  };\n  return React.createElement(\n  asChild ? Slot : Text, _objectSpread(_objectSpread(_objectSpread({\n    ref: ref\n  }, props), rest), Platform.select({\n    web: {\n      onClick: onPress\n    },\n    default: {\n      onPress: onPress\n    }\n  })));\n}","map":{"version":3,"names":["Text","Slot","React","resolveHref","useLinkToPathProps","useRouter","useFocusEffect","Redirect","href","router","replace","Link","forwardRef","ExpoRouterLink","ref","asChild","rest","resolvedHref","useMemo","Error","props","onPress","e","createElement","Platform","select","web","onClick","default"],"sources":["C:/react-project/rn-jobs/node_modules/expo-router/src/link/Link.tsx"],"sourcesContent":["// Fork of @react-navigation/native Link.tsx with `href` and `replace` support added and\n// `to` / `action` support removed.\nimport { Text, TextProps } from \"@bacons/react-views\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport * as React from \"react\";\nimport { GestureResponderEvent, Platform } from \"react-native\";\n\nimport { Href, resolveHref } from \"./href\";\nimport useLinkToPathProps from \"./useLinkToPathProps\";\nimport { useRouter } from \"./useRouter\";\nimport { useFocusEffect } from \"../useFocusEffect\";\n\nexport interface LinkProps extends Omit<TextProps, \"href\" | \"hoverStyle\"> {\n  /** Path to route to. */\n  href: Href;\n\n  // TODO(EvanBacon): This may need to be extracted for React Native style support.\n  /** Forward props to child component. Useful for custom buttons. */\n  asChild?: boolean;\n\n  /** Should replace the current route without adding to the history. */\n  replace?: boolean;\n\n  onPress?: (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n}\n\n/** Redirects to the href as soon as the component is mounted. */\nexport function Redirect({ href }: { href: Href }) {\n  const router = useRouter();\n  useFocusEffect(() => {\n    router.replace(href);\n  });\n  return null;\n}\n\nexport interface LinkComponent {\n  (props: React.PropsWithChildren<LinkProps>): JSX.Element;\n  /** Helper method to resolve an Href object into a string. */\n  resolveHref: typeof resolveHref;\n}\n\n/**\n * Component to render link to another route using a path.\n * Uses an anchor tag on the web.\n *\n * @param props.href Absolute path to route (e.g. `/feeds/hot`).\n * @param props.replace Should replace the current route without adding to the history.\n * @param props.asChild Forward props to child component. Useful for custom buttons.\n * @param props.children Child elements to render the content.\n */\nexport const Link = React.forwardRef(\n  ExpoRouterLink\n) as unknown as LinkComponent;\n\nLink.resolveHref = resolveHref;\n\nfunction ExpoRouterLink(\n  {\n    href,\n    replace,\n    // TODO: This does not prevent default on the anchor tag.\n    asChild,\n    ...rest\n  }: LinkProps,\n  ref: React.ForwardedRef<Text>\n) {\n  const resolvedHref = React.useMemo(() => {\n    if (href == null) {\n      throw new Error(\"Link: href is required\");\n    }\n    return resolveHref(href);\n  }, [href]);\n\n  const props = useLinkToPathProps({ href: resolvedHref, replace });\n\n  const onPress = (\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent> | GestureResponderEvent\n  ) => {\n    if (\"onPress\" in rest) {\n      rest.onPress?.(e);\n    }\n    props.onPress(e);\n  };\n\n  return React.createElement(\n    // @ts-expect-error: slot is not type-safe\n    asChild ? Slot : Text,\n    {\n      ref,\n      ...props,\n      ...rest,\n      ...Platform.select({\n        web: { onClick: onPress } as any,\n        default: { onPress },\n      }),\n    }\n  );\n}\n"],"mappings":";;;;;AAEA,SAASA,IAAI,QAAmB,qBAAqB;AACrD,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAG/B,SAAeC,WAAW;AAC1B,OAAOC,kBAAkB;AACzB,SAASC,SAAS;AAClB,SAASC,cAAc;AAmBvB,OAAO,SAASC,QAAQ,OAA2B;EAAA,IAAxBC,IAAI,QAAJA,IAAI;EAC7B,IAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1BC,cAAc,CAAC,YAAM;IACnBG,MAAM,CAACC,OAAO,CAACF,IAAI,CAAC;EACtB,CAAC,CAAC;EACF,OAAO,IAAI;AACb;AAiBA,OAAO,IAAMG,IAAI,GAAGT,KAAK,CAACU,UAAU,CAClCC,cAAc,CACa;AAE7BF,IAAI,CAACR,WAAW,GAAGA,WAAW;AAE9B,SAASU,cAAc,QAQrBC,GAA6B,EAC7B;EAAA,IAPEN,IAAI,SAAJA,IAAI;IACJE,OAAO,SAAPA,OAAO;IAEPK,OAAO,SAAPA,OAAO;IACJC,IAAI;EAIT,IAAMC,YAAY,GAAGf,KAAK,CAACgB,OAAO,CAAC,YAAM;IACvC,IAAIV,IAAI,IAAI,IAAI,EAAE;MAChB,MAAM,IAAIW,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IACA,OAAOhB,WAAW,CAACK,IAAI,CAAC;EAC1B,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,IAAMY,KAAK,GAAGhB,kBAAkB,CAAC;IAAEI,IAAI,EAAES,YAAY;IAAEP,OAAO,EAAPA;EAAQ,CAAC,CAAC;EAEjE,IAAMW,OAAO,GAAG,SAAVA,OAAO,CACXC,CAA0E,EACvE;IACH,IAAI,SAAS,IAAIN,IAAI,EAAE;MACrBA,IAAI,CAACK,OAAO,oBAAZL,IAAI,CAACK,OAAO,CAAGC,CAAC,CAAC;IACnB;IACAF,KAAK,CAACC,OAAO,CAACC,CAAC,CAAC;EAClB,CAAC;EAED,OAAOpB,KAAK,CAACqB,aAAa;EAExBR,OAAO,GAAGd,IAAI,GAAGD,IAAI;IAEnBc,GAAG,EAAHA;EAAG,GACAM,KAAK,GACLJ,IAAI,GACJQ,QAAQ,CAACC,MAAM,CAAC;IACjBC,GAAG,EAAE;MAAEC,OAAO,EAAEN;IAAQ,CAAQ;IAChCO,OAAO,EAAE;MAAEP,OAAO,EAAPA;IAAQ;EACrB,CAAC,CAAC,EAEL;AACH"},"metadata":{},"sourceType":"module"}