{"ast":null,"code":"\n\nexport function findFocusedRoute(state) {\n  var _current2, _current$index3, _current3;\n  var current = state;\n  while (((_current = current) == null ? void 0 : _current.routes[(_current$index = current.index) != null ? _current$index : 0].state) != null) {\n    var _current, _current$index, _current$index2;\n    current = current.routes[(_current$index2 = current.index) != null ? _current$index2 : 0].state;\n  }\n  var route = (_current2 = current) == null ? void 0 : _current2.routes[(_current$index3 = (_current3 = current) == null ? void 0 : _current3.index) != null ? _current$index3 : 0];\n  return route;\n}","map":{"version":3,"names":["findFocusedRoute","state","current","routes","index","route"],"sources":["C:/react-project/rn-jobs/node_modules/expo-router/src/fork/findFocusedRoute.tsx"],"sourcesContent":["// Forked so we can access without importing any React Native code in Node.js environments.\n\nimport type { InitialState } from \"@react-navigation/routers\";\n\nexport function findFocusedRoute(state: InitialState) {\n  let current: InitialState | undefined = state;\n\n  while (current?.routes[current.index ?? 0].state != null) {\n    current = current.routes[current.index ?? 0].state;\n  }\n\n  const route = current?.routes[current?.index ?? 0];\n\n  return route;\n}\n"],"mappings":";;AAIA,OAAO,SAASA,gBAAgB,CAACC,KAAmB,EAAE;EAAA;EACpD,IAAIC,OAAiC,GAAGD,KAAK;EAE7C,OAAO,aAAAC,OAAO,qBAAP,SAASC,MAAM,mBAACD,OAAO,CAACE,KAAK,6BAAI,CAAC,CAAC,CAACH,KAAK,KAAI,IAAI,EAAE;IAAA;IACxDC,OAAO,GAAGA,OAAO,CAACC,MAAM,oBAACD,OAAO,CAACE,KAAK,8BAAI,CAAC,CAAC,CAACH,KAAK;EACpD;EAEA,IAAMI,KAAK,gBAAGH,OAAO,qBAAP,UAASC,MAAM,iCAACD,OAAO,qBAAP,UAASE,KAAK,8BAAI,CAAC,CAAC;EAElD,OAAOC,KAAK;AACd"},"metadata":{},"sourceType":"module"}