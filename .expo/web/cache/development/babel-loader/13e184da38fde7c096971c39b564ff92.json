{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function get() {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LogBoxInspectorHeader = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar LogContext_1 = require(\"../Data/LogContext\");\nvar LogBoxButton_1 = require(\"../UI/LogBoxButton\");\nvar LogBoxStyle = __importStar(require(\"../UI/LogBoxStyle\"));\nfunction LogBoxInspectorHeader(props) {\n  var _ref = (0, LogContext_1.useLogs)(),\n    selectedIndex = _ref.selectedLogIndex,\n    logs = _ref.logs;\n  var total = logs.length;\n  if (props.level === \"syntax\") {\n    return react_1.default.createElement(react_native_1.View, {\n      style: [styles.safeArea, styles[props.level]]\n    }, react_1.default.createElement(react_native_1.View, {\n      style: styles.header\n    }, react_1.default.createElement(react_native_1.View, {\n      style: styles.title\n    }, react_1.default.createElement(react_native_1.Text, {\n      style: styles.titleText\n    }, \"Failed to compile\"))));\n  }\n  var prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  var nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n  var titleText = \"Log \" + (selectedIndex + 1) + \" of \" + total;\n  return react_1.default.createElement(react_native_1.View, {\n    style: [styles.safeArea, styles[props.level]]\n  }, react_1.default.createElement(react_native_1.View, {\n    style: styles.header\n  }, react_1.default.createElement(LogBoxInspectorHeaderButton, {\n    disabled: total <= 1,\n    level: props.level,\n    image: require(\"@expo/metro-runtime/assets/chevron-left.png\"),\n    onPress: function onPress() {\n      return props.onSelectIndex(prevIndex);\n    }\n  }), react_1.default.createElement(react_native_1.View, {\n    style: styles.title\n  }, react_1.default.createElement(react_native_1.Text, {\n    style: styles.titleText\n  }, titleText)), react_1.default.createElement(LogBoxInspectorHeaderButton, {\n    disabled: total <= 1,\n    level: props.level,\n    image: require(\"@expo/metro-runtime/assets/chevron-right.png\"),\n    onPress: function onPress() {\n      return props.onSelectIndex(nextIndex);\n    }\n  })));\n}\nexports.LogBoxInspectorHeader = LogBoxInspectorHeader;\nvar backgroundForLevel = function backgroundForLevel(level) {\n  return {\n    warn: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getWarningDarkColor()\n    },\n    error: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getErrorDarkColor()\n    },\n    fatal: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor()\n    },\n    syntax: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor()\n    }\n  }[level];\n};\nfunction LogBoxInspectorHeaderButton(props) {\n  return react_1.default.createElement(LogBoxButton_1.LogBoxButton, {\n    backgroundColor: backgroundForLevel(props.level),\n    onPress: props.disabled ? undefined : props.onPress,\n    style: headerStyles.button\n  }, props.disabled ? null : react_1.default.createElement(react_native_1.Image, {\n    source: props.image,\n    style: headerStyles.buttonImage\n  }));\n}\nvar headerStyles = react_native_1.StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    aspectRatio: 1,\n    justifyContent: \"center\",\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: react_native_1.Platform.select({\n      web: 0,\n      default: -8\n    }),\n    borderRadius: 3\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor()\n  }\n});\nvar styles = react_native_1.StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor()\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor()\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor()\n  },\n  header: {\n    flexDirection: \"row\",\n    height: react_native_1.Platform.select({\n      default: 48,\n      ios: 44\n    })\n  },\n  title: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 20\n  },\n  safeArea: {\n    paddingTop: react_native_1.Platform.OS !== \"ios\" ? react_native_1.StatusBar.currentHeight : 40\n  }\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;AAA0B;AAW1B;AACA;AACA;AAOA,SAAgBA,qBAAqB,CAACC,KAAY;EAChD,WAAkD,wBAAO,GAAE;IAAjCC,aAAa,QAA/BC,gBAAgB;IAAiBC,IAAI,QAAJA,IAAI;EAC7C,IAAMC,KAAK,GAAGD,IAAI,CAACE,MAAM;EAEzB,IAAIL,KAAK,CAACM,KAAK,KAAK,QAAQ,EAAE;IAC5B,OACEC,8BAACC,mBAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAED,MAAM,CAACV,KAAK,CAACM,KAAK,CAAC;IAAC,GACjDC,8BAACC,mBAAI;MAACC,KAAK,EAAEC,MAAM,CAACE;IAAM,GACxBL,8BAACC,mBAAI;MAACC,KAAK,EAAEC,MAAM,CAACG;IAAK,GACvBN,8BAACC,mBAAI;MAACC,KAAK,EAAEC,MAAM,CAACI;IAAS,uBAA0B,CAClD,CACF,CACF;;EAIX,IAAMC,SAAS,GAAGd,aAAa,GAAG,CAAC,GAAG,CAAC,GAAGG,KAAK,GAAG,CAAC,GAAGH,aAAa,GAAG,CAAC;EACvE,IAAMe,SAAS,GAAGf,aAAa,GAAG,CAAC,GAAGG,KAAK,GAAG,CAAC,GAAG,CAAC,GAAGH,aAAa,GAAG,CAAC;EAEvE,IAAMa,SAAS,aAAUb,aAAa,GAAG,CAAC,aAAOG,KAAO;EAExD,OACEG,8BAACC,mBAAI;IAACC,KAAK,EAAE,CAACC,MAAM,CAACC,QAAQ,EAAED,MAAM,CAACV,KAAK,CAACM,KAAK,CAAC;EAAC,GACjDC,8BAACC,mBAAI;IAACC,KAAK,EAAEC,MAAM,CAACE;EAAM,GACxBL,8BAACU,2BAA2B;IAC1BC,QAAQ,EAAEd,KAAK,IAAI,CAAC;IACpBE,KAAK,EAAEN,KAAK,CAACM,KAAK;IAClBa,KAAK,EAAEC,OAAO,CAAC,6CAA6C,CAAC;IAC7DC,OAAO,EAAE;MAAA,OAAMrB,KAAK,CAACsB,aAAa,CAACP,SAAS,CAAC;IAAA;EAAA,EAC7C,EACFR,8BAACC,mBAAI;IAACC,KAAK,EAAEC,MAAM,CAACG;EAAK,GACvBN,8BAACC,mBAAI;IAACC,KAAK,EAAEC,MAAM,CAACI;EAAS,GAAGA,SAAS,CAAQ,CAC5C,EACPP,8BAACU,2BAA2B;IAC1BC,QAAQ,EAAEd,KAAK,IAAI,CAAC;IACpBE,KAAK,EAAEN,KAAK,CAACM,KAAK;IAClBa,KAAK,EAAEC,OAAO,CAAC,8CAA8C,CAAC;IAC9DC,OAAO,EAAE;MAAA,OAAMrB,KAAK,CAACsB,aAAa,CAACN,SAAS,CAAC;IAAA;EAAA,EAC7C,CACG,CACF;AAEX;AA1CAO;AA4CA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkB,CAAIlB,KAAe;EAAA,OACxC;IACCmB,IAAI,EAAE;MACJC,OAAO,EAAE,aAAa;MACtBC,OAAO,EAAEC,WAAW,CAACC,mBAAmB;KACzC;IACDC,KAAK,EAAE;MACLJ,OAAO,EAAE,aAAa;MACtBC,OAAO,EAAEC,WAAW,CAACG,iBAAiB;KACvC;IACDC,KAAK,EAAE;MACLN,OAAO,EAAE,aAAa;MACtBC,OAAO,EAAEC,WAAW,CAACK,iBAAiB;KACvC;IACDC,MAAM,EAAE;MACNR,OAAO,EAAE,aAAa;MACtBC,OAAO,EAAEC,WAAW,CAACK,iBAAiB;;GAEzC,CAAC3B,KAAK,CAAC;AAAA,CAAC;AAEX,SAASW,2BAA2B,CAACjB,KAKpC;EACC,OACEO,8BAAC4B,2BAAY;IACXC,eAAe,EAAEZ,kBAAkB,CAACxB,KAAK,CAACM,KAAK,CAAC;IAChDe,OAAO,EAAErB,KAAK,CAACkB,QAAQ,GAAGmB,SAAS,GAAGrC,KAAK,CAACqB,OAAO;IACnDZ,KAAK,EAAE6B,YAAY,CAACC;EAAM,GAEzBvC,KAAK,CAACkB,QAAQ,GAAG,IAAI,GACpBX,8BAACC,oBAAK;IAACgC,MAAM,EAAExC,KAAK,CAACmB,KAAK;IAAEV,KAAK,EAAE6B,YAAY,CAACG;EAAW,EAC5D,CACY;AAEnB;AAEA,IAAMH,YAAY,GAAG9B,yBAAU,CAACkC,MAAM,CAAC;EACrCH,MAAM,EAAE;IACNI,UAAU,EAAE,QAAQ;IACpBC,WAAW,EAAE,CAAC;IACdC,cAAc,EAAE,QAAQ;IACxBC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,CAAC;IACdC,UAAU,EAAE,CAAC;IACbC,YAAY,EAAEzC,uBAAQ,CAAC0C,MAAM,CAAC;MAC5BC,GAAG,EAAE,CAAC;MACNzB,OAAO,EAAE,CAAC;KACX,CAAC;IACF0B,YAAY,EAAE;GACf;EACDX,WAAW,EAAE;IACXY,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,CAAC;IACRC,SAAS,EAAE3B,WAAW,CAAC4B,YAAY;;CAEtC,CAAC;AAEF,IAAM9C,MAAM,GAAGF,yBAAU,CAACkC,MAAM,CAAC;EAC/BR,MAAM,EAAE;IACNE,eAAe,EAAER,WAAW,CAAC6B,aAAa;GAC3C;EACDzB,KAAK,EAAE;IACLI,eAAe,EAAER,WAAW,CAAC6B,aAAa;GAC3C;EACDhC,IAAI,EAAE;IACJW,eAAe,EAAER,WAAW,CAAC8B,eAAe;GAC7C;EACD5B,KAAK,EAAE;IACLM,eAAe,EAAER,WAAW,CAAC+B,aAAa;GAC3C;EACD/C,MAAM,EAAE;IACNgD,aAAa,EAAE,KAAK;IACpBP,MAAM,EAAE7C,uBAAQ,CAAC0C,MAAM,CAAC;MACtBxB,OAAO,EAAE,EAAE;MACXmC,GAAG,EAAE;KACN;GACF;EACDhD,KAAK,EAAE;IACL8B,UAAU,EAAE,QAAQ;IACpBmB,IAAI,EAAE,CAAC;IACPjB,cAAc,EAAE;GACjB;EACD/B,SAAS,EAAE;IACTiD,KAAK,EAAEnC,WAAW,CAAC4B,YAAY,EAAE;IACjCQ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,KAAK;IACjBC,kBAAkB,EAAE,KAAK;IACzBC,UAAU,EAAE;GACb;EACDxD,QAAQ,EAAE;IACRyD,UAAU,EAAE5D,uBAAQ,CAAC6D,EAAE,KAAK,KAAK,GAAG7D,wBAAS,CAAC8D,aAAa,GAAG;;CAEjE,CAAC","names":["LogBoxInspectorHeader","props","selectedIndex","selectedLogIndex","logs","total","length","level","react_1","react_native_1","style","styles","safeArea","header","title","titleText","prevIndex","nextIndex","LogBoxInspectorHeaderButton","disabled","image","require","onPress","onSelectIndex","exports","backgroundForLevel","warn","default","pressed","LogBoxStyle","getWarningDarkColor","error","getErrorDarkColor","fatal","getFatalDarkColor","syntax","LogBoxButton_1","backgroundColor","undefined","headerStyles","button","source","buttonImage","create","alignItems","aspectRatio","justifyContent","marginTop","marginRight","marginLeft","marginBottom","select","web","borderRadius","height","width","tintColor","getTextColor","getFatalColor","getWarningColor","getErrorColor","flexDirection","ios","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","paddingTop","OS","currentHeight"],"sourceRoot":"","sources":["../../../src/error-overlay/overlay/LogBoxInspectorHeader.tsx"],"sourcesContent":["/**\n * Copyright (c) Evan Bacon.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from \"react\";\nimport {\n  Image,\n  Platform,\n  StatusBar,\n  StyleSheet,\n  Text,\n  View,\n} from \"react-native\";\n\nimport type { LogLevel } from \"../Data/LogBoxLog\";\nimport { useLogs } from \"../Data/LogContext\";\nimport { LogBoxButton } from \"../UI/LogBoxButton\";\nimport * as LogBoxStyle from \"../UI/LogBoxStyle\";\n\ntype Props = {\n  onSelectIndex: (selectedIndex: number) => void;\n  level: LogLevel;\n};\n\nexport function LogBoxInspectorHeader(props: Props) {\n  const { selectedLogIndex: selectedIndex, logs } = useLogs();\n  const total = logs.length;\n\n  if (props.level === \"syntax\") {\n    return (\n      <View style={[styles.safeArea, styles[props.level]]}>\n        <View style={styles.header}>\n          <View style={styles.title}>\n            <Text style={styles.titleText}>Failed to compile</Text>\n          </View>\n        </View>\n      </View>\n    );\n  }\n\n  const prevIndex = selectedIndex - 1 < 0 ? total - 1 : selectedIndex - 1;\n  const nextIndex = selectedIndex + 1 > total - 1 ? 0 : selectedIndex + 1;\n\n  const titleText = `Log ${selectedIndex + 1} of ${total}`;\n\n  return (\n    <View style={[styles.safeArea, styles[props.level]]}>\n      <View style={styles.header}>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require(\"@expo/metro-runtime/assets/chevron-left.png\")}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.title}>\n          <Text style={styles.titleText}>{titleText}</Text>\n        </View>\n        <LogBoxInspectorHeaderButton\n          disabled={total <= 1}\n          level={props.level}\n          image={require(\"@expo/metro-runtime/assets/chevron-right.png\")}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst backgroundForLevel = (level: LogLevel) =>\n  ({\n    warn: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getWarningDarkColor(),\n    },\n    error: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getErrorDarkColor(),\n    },\n    fatal: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n    syntax: {\n      default: \"transparent\",\n      pressed: LogBoxStyle.getFatalDarkColor(),\n    },\n  }[level]);\n\nfunction LogBoxInspectorHeaderButton(props: {\n  disabled: boolean;\n  image: number;\n  level: LogLevel;\n  onPress?: () => void;\n}) {\n  return (\n    <LogBoxButton\n      backgroundColor={backgroundForLevel(props.level)}\n      onPress={props.disabled ? undefined : props.onPress}\n      style={headerStyles.button}\n    >\n      {props.disabled ? null : (\n        <Image source={props.image} style={headerStyles.buttonImage} />\n      )}\n    </LogBoxButton>\n  );\n}\n\nconst headerStyles = StyleSheet.create({\n  button: {\n    alignItems: \"center\",\n    aspectRatio: 1,\n    justifyContent: \"center\",\n    marginTop: 5,\n    marginRight: 6,\n    marginLeft: 6,\n    marginBottom: Platform.select({\n      web: 0,\n      default: -8,\n    }),\n    borderRadius: 3,\n  },\n  buttonImage: {\n    height: 14,\n    width: 8,\n    tintColor: LogBoxStyle.getTextColor(),\n  },\n});\n\nconst styles = StyleSheet.create({\n  syntax: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  fatal: {\n    backgroundColor: LogBoxStyle.getFatalColor(),\n  },\n  warn: {\n    backgroundColor: LogBoxStyle.getWarningColor(),\n  },\n  error: {\n    backgroundColor: LogBoxStyle.getErrorColor(),\n  },\n  header: {\n    flexDirection: \"row\",\n    height: Platform.select({\n      default: 48,\n      ios: 44,\n    }),\n  },\n  title: {\n    alignItems: \"center\",\n    flex: 1,\n    justifyContent: \"center\",\n  },\n  titleText: {\n    color: LogBoxStyle.getTextColor(),\n    fontSize: 16,\n    fontWeight: \"600\",\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n  safeArea: {\n    paddingTop: Platform.OS !== \"ios\" ? StatusBar.currentHeight : 40,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}