{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nexport var RootNavigationRef = React.createContext({\n  ref: null\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RootNavigationRef.displayName = \"RootNavigationRef\";\n}\nexport function useRootNavigation() {\n  var context = React.useContext(RootNavigationRef);\n  if (!context) {\n    throw new Error(\"useRootNavigation must be used within a NavigationContainerContext\");\n  }\n  return context.ref;\n}\nexport function useRootNavigationState() {\n  var navigation = useRootNavigation();\n  var _React$useState = React.useState(navigation == null ? void 0 : navigation.getRootState()),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    state = _React$useState2[0],\n    setState = _React$useState2[1];\n  React.useEffect(function () {\n    if (navigation) {\n      setState(navigation.getRootState());\n      var unsubscribe = navigation.addListener(\"state\", function (_ref) {\n        var data = _ref.data;\n        setState(\n        data.state);\n      });\n      return unsubscribe;\n    }\n    return undefined;\n  }, [navigation]);\n  return state;\n}","map":{"version":3,"names":["React","RootNavigationRef","createContext","ref","process","env","NODE_ENV","displayName","useRootNavigation","context","useContext","Error","useRootNavigationState","navigation","useState","getRootState","state","setState","useEffect","unsubscribe","addListener","data","undefined"],"sources":["C:/react-project/rn-jobs/node_modules/expo-router/src/useRootNavigation.ts"],"sourcesContent":["import { NavigationContainerRefWithCurrent } from \"@react-navigation/native\";\nimport React from \"react\";\n\nimport { State } from \"./fork/getPathFromState\";\n\nexport const RootNavigationRef = React.createContext<{\n  ref: NavigationContainerRefWithCurrent<ReactNavigation.RootParamList> | null;\n}>({ ref: null });\n\nif (process.env.NODE_ENV !== \"production\") {\n  RootNavigationRef.displayName = \"RootNavigationRef\";\n}\n\nexport function useRootNavigation() {\n  const context = React.useContext(RootNavigationRef);\n  if (!context) {\n    throw new Error(\n      \"useRootNavigation must be used within a NavigationContainerContext\"\n    );\n  }\n  return context.ref;\n}\n\nexport function useRootNavigationState(): State | undefined {\n  const navigation = useRootNavigation();\n  const [state, setState] = React.useState(navigation?.getRootState());\n  React.useEffect(() => {\n    if (navigation) {\n      setState(navigation.getRootState());\n      const unsubscribe = navigation.addListener(\"state\", ({ data }) => {\n        setState(\n          // @ts-expect-error: idk\n          data.state\n        );\n      });\n      return unsubscribe;\n    }\n    return undefined;\n  }, [navigation]);\n\n  return state;\n}\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAIzB,OAAO,IAAMC,iBAAiB,GAAGD,KAAK,CAACE,aAAa,CAEjD;EAAEC,GAAG,EAAE;AAAK,CAAC,CAAC;AAEjB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzCL,iBAAiB,CAACM,WAAW,GAAG,mBAAmB;AACrD;AAEA,OAAO,SAASC,iBAAiB,GAAG;EAClC,IAAMC,OAAO,GAAGT,KAAK,CAACU,UAAU,CAACT,iBAAiB,CAAC;EACnD,IAAI,CAACQ,OAAO,EAAE;IACZ,MAAM,IAAIE,KAAK,CACb,oEAAoE,CACrE;EACH;EACA,OAAOF,OAAO,CAACN,GAAG;AACpB;AAEA,OAAO,SAASS,sBAAsB,GAAsB;EAC1D,IAAMC,UAAU,GAAGL,iBAAiB,EAAE;EACtC,sBAA0BR,KAAK,CAACc,QAAQ,CAACD,UAAU,oBAAVA,UAAU,CAAEE,YAAY,EAAE,CAAC;IAAA;IAA7DC,KAAK;IAAEC,QAAQ;EACtBjB,KAAK,CAACkB,SAAS,CAAC,YAAM;IACpB,IAAIL,UAAU,EAAE;MACdI,QAAQ,CAACJ,UAAU,CAACE,YAAY,EAAE,CAAC;MACnC,IAAMI,WAAW,GAAGN,UAAU,CAACO,WAAW,CAAC,OAAO,EAAE,gBAAc;QAAA,IAAXC,IAAI,QAAJA,IAAI;QACzDJ,QAAQ;QAENI,IAAI,CAACL,KAAK,CACX;MACH,CAAC,CAAC;MACF,OAAOG,WAAW;IACpB;IACA,OAAOG,SAAS;EAClB,CAAC,EAAE,CAACT,UAAU,CAAC,CAAC;EAEhB,OAAOG,KAAK;AACd"},"metadata":{},"sourceType":"module"}