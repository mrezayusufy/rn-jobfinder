{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withErrorOverlay = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nvar react_native_1 = require(\"react-native-web/dist/index\");\nvar ErrorToastContainer_1 = __importDefault(require(\"./toast/ErrorToastContainer\"));\nif (!global.setImmediate) {\n  global.setImmediate = function (fn) {\n    return setTimeout(fn, 0);\n  };\n}\nif (process.env.NODE_ENV === \"development\" && react_native_1.Platform.OS === \"web\") {\n  require(\"./LogBox\").install();\n}\nfunction withErrorOverlay(Comp) {\n  if (process.env.NODE_ENV === \"production\") {\n    return Comp;\n  }\n  return function ErrorOverlay(props) {\n    return react_1.default.createElement(ErrorToastContainer_1.default, null, react_1.default.createElement(Comp, _objectSpread({}, props)));\n  };\n}\nexports.withErrorOverlay = withErrorOverlay;","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAAA;AAA0B;AAG1B;AAIA,IAAI,CAACA,MAAM,CAACC,YAAY,EAAE;EAExBD,MAAM,CAACC,YAAY,GAAG,UAAUC,EAAE;IAChC,OAAOC,UAAU,CAACD,EAAE,EAAE,CAAC,CAAC;EAC1B,CAAC;;AAGH,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAIC,uBAAQ,CAACC,EAAE,KAAK,KAAK,EAAE;EAGnEC,OAAO,YAAY,CAACC,OAAO,EAAE;;AAG/B,SAAgBC,gBAAgB,CAACC,IAA8B;EAC7D,IAAIR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAOM,IAAI;;EAEb,OAAO,SAASC,YAAY,CAACC,KAAU;IACrC,OACEC,8BAACC,6BAAmB,QAClBD,8BAACH,IAAI,oBAAKE,KAAK,EAAI,CACC;EAE1B,CAAC;AACH;AAXAG","names":["global","setImmediate","fn","setTimeout","process","env","NODE_ENV","react_native_1","OS","require","install","withErrorOverlay","Comp","ErrorOverlay","props","react_1","ErrorToastContainer_1","exports"],"sourceRoot":"","sources":["../../src/error-overlay/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { Platform } from \"react-native\";\n\nimport ErrorToastContainer from \"./toast/ErrorToastContainer\";\n\ndeclare const process: any;\n\nif (!global.setImmediate) {\n  // @ts-expect-error: setImmediate is not defined in the global scope\n  global.setImmediate = function (fn) {\n    return setTimeout(fn, 0);\n  };\n}\n\nif (process.env.NODE_ENV === \"development\" && Platform.OS === \"web\") {\n  // Stack traces are big with React Navigation\n\n  require(\"./LogBox\").install();\n}\n\nexport function withErrorOverlay(Comp: React.ComponentType<any>) {\n  if (process.env.NODE_ENV === \"production\") {\n    return Comp;\n  }\n  return function ErrorOverlay(props: any) {\n    return (\n      <ErrorToastContainer>\n        <Comp {...props} />\n      </ErrorToastContainer>\n    );\n  };\n}\n"]},"metadata":{},"sourceType":"script"}