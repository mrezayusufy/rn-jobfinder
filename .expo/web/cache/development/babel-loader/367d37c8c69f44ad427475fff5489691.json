{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSelectedLog = exports.useLogs = exports.LogContext = void 0;\nvar react_1 = __importDefault(require(\"react\"));\nexports.LogContext = react_1.default.createContext({\n  selectedLogIndex: -1,\n  isDisabled: false,\n  logs: []\n});\nfunction useLogs() {\n  var logs = react_1.default.useContext(exports.LogContext);\n  if (!logs) {\n    throw new Error(\"useLogs must be used within a LogProvider\");\n  }\n  return logs;\n}\nexports.useLogs = useLogs;\nfunction useSelectedLog() {\n  var _useLogs = useLogs(),\n    selectedLogIndex = _useLogs.selectedLogIndex,\n    logs = _useLogs.logs;\n  return logs[selectedLogIndex];\n}\nexports.useSelectedLog = useSelectedLog;","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;AAMaA,kBAAU,GAAGC,eAAK,CAACC,aAAa,CAI1C;EACDC,gBAAgB,EAAE,CAAC,CAAC;EACpBC,UAAU,EAAE,KAAK;EACjBC,IAAI,EAAE;CACP,CAAC;AAEF,SAAgBC,OAAO;EACrB,IAAMD,IAAI,GAAGJ,eAAK,CAACM,UAAU,CAACP,kBAAU,CAAC;EACzC,IAAI,CAACK,IAAI,EAAE;IACT,MAAM,IAAIG,KAAK,CAAC,2CAA2C,CAAC;;EAE9D,OAAOH,IAAI;AACb;AANAL;AAQA,SAAgBS,cAAc;EAC5B,eAAmCH,OAAO,EAAE;IAApCH,gBAAgB,YAAhBA,gBAAgB;IAAEE,IAAI,YAAJA,IAAI;EAC9B,OAAOA,IAAI,CAACF,gBAAgB,CAAC;AAC/B;AAHAH","names":["exports","react_1","createContext","selectedLogIndex","isDisabled","logs","useLogs","useContext","Error","useSelectedLog"],"sourceRoot":"","sources":["../../../src/error-overlay/Data/LogContext.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { LogBoxLog } from \"./LogBoxLog\";\n\n// Context provider for Array<LogBoxLog>\n\nexport const LogContext = React.createContext<{\n  selectedLogIndex: number;\n  isDisabled: boolean;\n  logs: LogBoxLog[];\n}>({\n  selectedLogIndex: -1,\n  isDisabled: false,\n  logs: [],\n});\n\nexport function useLogs() {\n  const logs = React.useContext(LogContext);\n  if (!logs) {\n    throw new Error(\"useLogs must be used within a LogProvider\");\n  }\n  return logs;\n}\n\nexport function useSelectedLog() {\n  const { selectedLogIndex, logs } = useLogs();\n  return logs[selectedLogIndex];\n}\n"]},"metadata":{},"sourceType":"script"}